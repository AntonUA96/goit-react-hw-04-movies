{"version":3,"sources":["movies-api.js","components/MoviesPage.js"],"names":["URL","KEY","getTrending","axios","get","searchMovies","query","getMovieDetails","id","getMovieCast","getMovieReviews","MoviesPage","state","movies","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","fetchFilms","this","props","location","search","qwe","URLSearchParams","moviesApi","then","resp","data","results","history","push","pathname","className","styles","onSubmit","type","placeholder","onChange","map","movie","to","from","title","Component","withRouter"],"mappings":"yIAAA,qBAEMA,EAAM,+BACNC,EAAM,mCAiBG,KACbC,YAhBkB,kBAAMC,IAAMC,IAAN,UAAaJ,EAAb,uCAA+CC,KAiBvEI,aAfmB,eAACC,EAAD,uDAAS,GAAT,OACnBH,IAAMC,IAAN,UACKJ,EADL,iCACiCC,EADjC,iCAC6DK,EAD7D,iCAeAC,gBAXsB,SAAAC,GAAE,OACxBL,IAAMC,IAAN,UAAaJ,EAAb,kBAA0BQ,EAA1B,oBAAwCP,EAAxC,qBAWAQ,aATmB,SAAAD,GAAE,OACrBL,IAAMC,IAAN,UAAaJ,EAAb,kBAA0BQ,EAA1B,4BAAgDP,KAShDS,gBAPsB,SAAAF,GAAE,OACxBL,IAAMC,IAAN,UAAaJ,EAAb,kBAA0BQ,EAA1B,4BAAgDP,EAAhD,8B,gICdIU,E,4MACJC,MAAQ,CACNN,MAAO,GACPO,OAAQ,I,EA6BVC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEV,MAAOS,EAAEE,cAAcC,S,EAEzCC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKJ,SAAS,CAAEV,MAAO,KACvB,EAAKe,c,uDAjCP,WAAqB,IAAD,OAElB,GADqBC,KAAKC,MAAlBC,SACKC,OAAQ,CACnB,IAAMC,EAAM,IAAIC,gBAAgBL,KAAKC,MAAMC,SAASC,QAAQrB,IAAI,SAChEwB,IACGvB,aAAaqB,GACbG,MAAK,SAAAC,GAAI,OAAI,EAAKd,SAAS,CAAEH,OAAQiB,EAAKC,KAAKC,aAClDV,KAAKC,MAAMU,QAAQC,KAAK,CACtBC,SAAUb,KAAKC,MAAMC,SAASW,SAC9BV,OAAO,SAAD,OAAWC,Q,wBAIvB,WAAc,IAAD,OACLA,EAAMJ,KAAKV,MAAMN,MAEvBsB,IAAUvB,aAAaqB,GAAKG,MAAK,SAAAC,GAE/B,EAAKd,SAAS,CAAEH,OAAQiB,EAAKC,KAAKC,UAElC,EAAKT,MAAMU,QAAQC,KAAK,CACtBC,SAAU,EAAKZ,MAAMC,SAASW,SAC9BV,OAAO,SAAD,OAAWC,U,oBAavB,WAAS,IAECb,EAAWS,KAAKV,MAAhBC,OACAW,EAAaF,KAAKC,MAAlBC,SACR,OACE,sBAAKY,UAAWC,IAAO1B,WAAvB,UACE,uBAAM2B,SAAUhB,KAAKH,aAArB,UACE,uBACEoB,KAAK,OACLC,YAAY,cACZtB,MAAOI,KAAKV,MAAMN,MAClBmC,SAAUnB,KAAKR,eAEjB,wBAAQyB,KAAK,SAAb,uBAED1B,GACC,6BACGA,EAAO6B,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CACEC,GAAI,CACFT,SAAS,WAAD,OAAaQ,EAAMnC,IAC3BI,MAAO,CACLiC,KAAMrB,IAJZ,SAQGmB,EAAMG,SATFH,EAAMnC,gB,GA1DJuC,aA6EVC,sBAAWrC","file":"static/js/movies-page.bd333e64.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '17748166fe59cedb6c7b855a403e9f75';\n\nconst getTrending = () => axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n\nconst searchMovies = (query = '') =>\n  axios.get(\n    `${URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n\nconst getMovieDetails = id =>\n  axios.get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`);\n\nconst getMovieCast = id =>\n  axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n\nconst getMovieReviews = id =>\n  axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\nexport default {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport moviesApi from '../movies-api';\nimport styles from '../App.module.css';\n\nclass MoviesPage extends Component {\n  state = {\n    query: '',\n    movies: [],\n  };\n  componentDidMount() {\n    const { location } = this.props;\n    if (location.search) {\n      const qwe = new URLSearchParams(this.props.location.search).get('query');\n      moviesApi\n        .searchMovies(qwe)\n        .then(resp => this.setState({ movies: resp.data.results }));\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${qwe}`,\n      });\n    }\n  }\n  fetchFilms() {\n    const qwe = this.state.query;\n    // const { location } = this.props;\n    moviesApi.searchMovies(qwe).then(resp => {\n      // console.log(resp.data.results);\n      this.setState({ movies: resp.data.results });\n      // console.log(this.state.movies);\n      this.props.history.push({\n        pathname: this.props.location.pathname,\n        search: `query=${qwe}`,\n      });\n      // console.log(this.props.history.location.search);\n    });\n  }\n  handleChange = e => {\n    this.setState({ query: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ query: '' });\n    this.fetchFilms();\n  };\n  render() {\n    // console.log(this.state.query);\n    const { movies } = this.state;\n    const { location } = this.props;\n    return (\n      <div className={styles.MoviesPage}>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Search film\"\n            value={this.state.query}\n            onChange={this.handleChange}\n          />\n          <button type=\"submit\">Search</button>\n        </form>\n        {movies && (\n          <ul>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Link\n                  to={{\n                    pathname: `/movies/${movie.id}`,\n                    state: {\n                      from: location,\n                    },\n                  }}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\nexport default withRouter(MoviesPage);\n"],"sourceRoot":""}