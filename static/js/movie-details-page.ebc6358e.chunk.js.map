{"version":3,"sources":["movies-api.js","components/Cast.js","components/Reviews.js","components/MovieDetailsPage.js"],"names":["URL","KEY","getTrending","axios","get","searchMovies","query","getMovieDetails","id","getMovieCast","getMovieReviews","Cast","state","cast","movieId","this","props","match","params","moviesApi","then","resp","setState","data","map","e","className","styles","CastFoto","src","profile_path","alt","original_title","name","character","Component","Reviews","reviews","results","length","author","content","MovieDetailsPage","movie","genres","r","hendleGoBack","location","history","push","from","GoBackButton","type","onClick","MovieCard","MovieImage","poster_path","MovieDescription","vote_average","OverviewSpan","overview","Genres","GenresSpan","GenresItem","AdditorInform","AdditorSpan","exact","NavigationLink","activeClassName","NavigationLinkActive","to","pathname","url","path","routes","component"],"mappings":"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","file":"static/js/movie-details-page.ebc6358e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3';\nconst KEY = '17748166fe59cedb6c7b855a403e9f75';\n\nconst getTrending = () => axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n\nconst searchMovies = (query = '') =>\n  axios.get(\n    `${URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`,\n  );\n\nconst getMovieDetails = id =>\n  axios.get(`${URL}/movie/${id}?api_key=${KEY}&language=en-US`);\n\nconst getMovieCast = id =>\n  axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n\nconst getMovieReviews = id =>\n  axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\nexport default {\n  getTrending,\n  searchMovies,\n  getMovieDetails,\n  getMovieCast,\n  getMovieReviews,\n};\n","import React, { Component } from 'react';\nimport moviesApi from '../movies-api';\nimport styles from '../App.module.css';\nclass Cast extends Component {\n  state = {\n    cast: [],\n  };\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    moviesApi.getMovieCast(movieId).then(resp => {\n      //   console.log(resp.data.cast);\n      this.setState({ cast: resp.data.cast });\n      //   console.log(this.state.cast);\n    });\n  }\n  render() {\n    const { cast } = this.state;\n    // console.log(cast);\n    return (\n      <ul>\n        {cast.map(e => (\n          <li key={e.id}>\n            <img\n              className={styles.CastFoto}\n              src={`https://image.tmdb.org/t/p/w500${e.profile_path}`}\n              alt={e.original_title}\n            />\n            <p>{e.name}</p>\n            <p>Character: {e.character}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\nexport default Cast;\n","import React, { Component } from 'react';\nimport moviesApi from '../movies-api';\nimport styles from '../App.module.css';\n\nclass Reviews extends Component {\n  state = {\n    reviews: [],\n  };\n  componentDidMount() {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    moviesApi.getMovieReviews(movieId).then(resp => {\n      // console.log(resp.data.results)\n      this.setState({ reviews: resp.data.results });\n      // console.log(this.state.reviews);\n    });\n  }\n  render() {\n    const { reviews } = this.state;\n    return (\n      <div>\n        {reviews.length === 0 && <p>We dont have any reviews for this film.</p>}\n        {reviews.length !== 0 && (\n          <ul className={styles.Reviews}>\n            {reviews.map(e => (\n              <li key={e.id}>\n                <p>Author: {e.author}</p>\n                <p>{e.content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\nexport default Reviews;\n","import React, { Component } from 'react';\nimport styles from '../App.module.css';\nimport moviesApi from '../movies-api';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport Cast from './Cast';\nimport Reviews from './Reviews';\nimport routes from '../routes';\n\nclass MovieDetailsPage extends Component {\n  state = {\n    movie: {\n      genres: [],\n    },\n    // movie: [],\n  };\n  // componentDidMount() {\n  //   moviesApi.getMovieDetails().then(resp => console.log(resp));\n  // }\n  componentDidMount() {\n    this.getMovieDetails();\n  }\n  getMovieDetails = () => {\n    const { match } = this.props;\n    const { movieId } = match.params;\n    // console.log(movieId);\n    moviesApi.getMovieDetails(movieId).then(r => {\n      this.setState({ movie: r.data });\n      // console.log(this.state.movie.backdrop_path);\n    });\n  };\n  hendleGoBack = () => {\n    const { location, history } = this.props;\n    history.push(location.state.from);\n  };\n  // hendleGoBack = () => {\n  //   const { location, history } = this.props;\n  //   history.goBack();\n  // }\n  // console.log(this.props);\n  // console.log(this.props.history.location.search);\n  // console.log(location);\n  // console.log(history);\n  // location.state ? history.push(location.state.prevPage) : history.goBack();\n  // history.goBack();\n  // if (location.state) {\n  //   return history.push(location.state.from);\n  // }\n  // if (location.state) {\n  //   return history.push(location.state.from);\n  // }\n  // history.push('/');\n  render() {\n    const { movie } = this.state;\n    const { match, location } = this.props;\n    // console.log(location)\n    // console.log(match.url);\n    // movie.genres.map(e => console.log(e));\n    // console.log(`https://image.tmdb.org/t/p/w500${movie.poster_path}`);\n    return (\n      <div className={styles.MovieDetailsPage}>\n        <button\n          className={styles.GoBackButton}\n          type=\"button\"\n          onClick={this.hendleGoBack}\n        >\n          &#8592; Go back\n        </button>\n        <div className={styles.MovieCard}>\n          <img\n            className={styles.MovieImage}\n            src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n            alt={movie.original_title}\n          />\n          <div className={styles.MovieDescription}>\n            <h2>{movie.original_title}</h2>\n            <p>User score: {movie.vote_average * 10}%</p>\n            <div>\n              <h3 className={styles.OverviewSpan}>Overview:</h3>\n              {movie.overview}\n            </div>\n            <div className={styles.Genres}>\n              <h3 className={styles.GenresSpan}>Genres:</h3>\n              {movie.genres.map(e => (\n                <p className={styles.GenresItem} key={e.id}>\n                  {e.name}\n                </p>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className={styles.AdditorInform}>\n          <p className={styles.AdditorSpan}>Additional information:</p>\n          <p>\n            <NavLink\n              exact\n              className={styles.NavigationLink}\n              activeClassName={styles.NavigationLinkActive}\n              to={{\n                pathname: `${match.url}/cast`,\n                state: {\n                  from: location,\n                },\n              }}\n              // to={`${match.url}/cast`}\n            >\n              Cast\n            </NavLink>\n          </p>\n          <p>\n            <NavLink\n              exact\n              className={styles.NavigationLink}\n              activeClassName={styles.NavigationLinkActive}\n              to={{\n                pathname: `${match.url}/reviews`,\n                state: {\n                  from: location,\n                },\n              }}\n            >\n              Reviews\n            </NavLink>\n          </p>\n        </div>\n        <Switch>\n          <Route path={routes.cast} component={Cast}></Route>\n          <Route path={routes.reviews} component={Reviews}></Route>\n        </Switch>\n      </div>\n    );\n  }\n}\nexport default MovieDetailsPage;\n"],"sourceRoot":""}